#!/bin/bash

# based off of https://github.com/FilipLitwora/dotfiles/blob/master/.local/bin/wallpaper -powwu

#find random wallpaper or if specified and set it as wallpaper using pywal

export dpi=$( cat ~/.dpi )

arg1="$1"
execname=$(echo $0 | rev | cut -d / -f 1 | rev)


function fail_case {
    find $arg1 | grep -E "^\S+\.(jpe?g|png|gif|bmp)$" > /dev/null || { echo "supplied argument $1 has no supported files. exiting...";  ps -C "$execname" -o pid= | xargs kill;}
    echo "supplied file $1 doesn't appear to be a supported file. retrying command..."
    find_wallpaper $arg1
    ps -C "$execname" -o pid= | xargs kill

}

function apply_wallpaper {
        wal -i $1 2> /dev/null || fail_case $1
        feh --bg-fill $1 
	#pkill swaybg
	#swaybg -m fill -i $1 &
	swww img --transition-step 20 --transition-fps=120 $1
        echo "$1" > $HOME/.current-wallpaper
        cp $HOME/.cache/wal/colors.Xresources $HOME/.Xresources
        echo "Xft.dpi: $dpi" >> $HOME/.Xresources
        echo "Xcursor.theme: macOS-BigSur" >> $HOME/.Xresources
        pywalfox update
	wal-telegram -g
        alacritty_xr_color_scheme ~/.config/alacritty/alacritty.yml

        #https://github.com/FilipLitwora/pywal-discord
        
	$HOME/Wallpapers/bin/pywal-discord
	spicetify update
	#pidof spotify && spicetify watch -s & # stupid solution to automatic reload bug 1
        xrdb -merge $HOME/.Xresources


	
	#https://github.com/poach3r/pywal-obsidianmd
	pywal-obsidianmd "/home/james/obsidian"



        color=$(sed 's/\#//' <<< $foreground)
        echo $color
        ratbagctl "Logitech G403 Prodigy Wired/Wireless Gaming Mouse" led 0 set color $color

        ratbagctl "Logitech G403 Prodigy Wired/Wireless Gaming Mouse" led 1 set color $color

	echo '
element-text {
    background-color: inherit;
    text-color:       inherit;
}

element-icon {
    background-color: inherit;
}
' >> ~/.cache/wal/colors-rofi-dark.rasi # hotfix for black text on rofi

}

function find_wallpaper {
    if [ -d "$1" ] # if directory
    then
        ls $1 | sort -R | tail -1 | while read file
        do
            find_wallpaper $1/$file # recursive so it goes down directories completely
        done
    else # if file
        apply_wallpaper $1
  	fi
}

if [ -z "$1" ] 
then
    echo "usage: $0 [path/to/images] or [path/to/image]"
    exit 1
else
    find_wallpaper $1
fi



